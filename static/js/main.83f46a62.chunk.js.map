{"version":3,"sources":["styles/sharedStyles.js","stores/main/defaultState.js","stores/main/mainReducer.js","stores/main/actions.js","toaster/toaster.js","sagas/ratesSaga.js","sagas/transactionsSaga.js","initSagas.js","stores/main/store.js","hoc/withLoading.js","components/Bar/Bar.js","components/AccountSummary/styles.js","pipes/amountPipe.js","components/AccountSummary/AccountSummary.js","components/ConversionInput/styles.js","components/ConversionInput/ConversionInput.js","components/ConversionsGrid/ConversionsGrid.js","components/CurrencySelect/styles.js","components/CurrencySelect/CurrencySelect.js","components/Conversions/Conversions.js","components/TransactionForm/TransactionForm.js","components/TransactionAmount/styles.js","components/TransactionAmount/TransactionAmount.js","components/TransactionPanel/TransactionPanel.js","components/TableHeader/TableHeader.js","components/TransactionListHeader/TransactionListHeader.js","components/TransactionsList/TransactionsList.js","components/Transactions/Transactions.js","views/AdminView.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","paper","padding","spacing","textAlign","lightBlue","backgroundColor","blue","textBold","fontWeight","typography","fontWeightBold","textSecondary","color","palette","text","secondary","appTitle","fontSize","pxToRem","grey","light","fullWidth","width","defaultState","base","targetCurrency","rates","transactions","mainReducer","arr","timestampToRemove","state","action","type","data","currency","value","console","log","concat","filter","el","CHANGE_RATE","CHANGE_TARGET","ADD_TRANSACTION","DELETE_TRANSACTION","SET_RATES","SET_TRANSACTIONS","Toaster","toastId","this","timeOut","transitionClass","css","transform","transition","msg","toast","TYPE","INFO","autoClose","DEFAULT","update","render","className","SUCCESS","ERROR","ratesSaga","toaster","inProgress","call","fetch","process","response","apply","json","put","updateSuccess","transactionsSaga","initSagas","sagaMiddleware","Object","values","sagas","forEach","run","bind","getStore","createSagaMiddleWare","middlewares","composables","applyMiddleware","enhancer","compose","store","createStore","Cmp","props","loading","passThroughProps","LinearProgress","Component","connect","ToolBarWithLoading","withLoading","Toolbar","AppBar","children","chip","marginLeft","marginRight","primary","amountPipe","number","Number","toFixed","internalStyles","styles","sharedStyles","useSharedStyles","isThereAnyTransaction","undefined","length","highest","reduce","max","transaction","parseFloat","amount","total","sum","Fragment","Box","display","alignSelf","Chip","join","id","label","border","borderRadius","rate","classes","TextField","key","onChange","e","event","target","dispatch","handleChange","InputLabelProps","shrink","margin","variant","conversions","keys","Paper","Grid","container","map","conversion","i","index","item","xs","md","lg","renderPanel","formControl","inputLabel","React","useRef","useState","labelWidth","setLabelWidth","useEffect","current","offsetWidth","FormControl","InputLabel","ref","htmlFor","Select","native","inputProps","name","CurrencySelectWithLoading","CurrencySelect","ConversionGridWithLoading","ConversionsGrid","flex-direction","setAmount","title","setTitle","isNullOrWhitespace","string","trim","isAmountValid","isNaN","isTitleValid","onSubmit","timestamp","moment","now","clone","person","alignItems","required","error","Button","amountPlus","green","amountMinus","red","TransactionAmount","assignColor","targetRate","expanded","setExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","alignContent","format","isAmountPositive","justify","onClick","onDelete","TableHeader","align","Typography","TransactionListHeader","TransactionListWithLoading","TransactionsList","form","CenteredGrid","flexDirection","justifyContent","p","my","py","createMuiTheme","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83f46a62.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\nexport default makeStyles(theme => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"left\"\r\n  },\r\n  lightBlue: {\r\n    backgroundColor: blue[50]\r\n  },\r\n  textBold: {\r\n    fontWeight: theme.typography.fontWeightBold\r\n  },\r\n  textSecondary: {\r\n    backgroundColor: blue[100],\r\n    color: theme.palette.text.secondary\r\n  },\r\n  appTitle: {\r\n    fontSize: theme.typography.pxToRem(25),\r\n    color: theme.palette.grey.light\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n}));\r\n","import moment from \"moment\";\r\n\r\nlet defaultState = {\r\n  // loading: true,\r\n  base: \"EUR\",\r\n  targetCurrency: \"PLN\",\r\n  rates: null,\r\n  transactions: null,\r\n};\r\nexport default defaultState;\r\n","import defaultState from \"stores/main/defaultState\";\r\nexport default function mainReducer(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_RATE\":\r\n      return {\r\n        ...state,\r\n        rates: { ...state.rates, [action.data.currency]: action.data.value }\r\n      };\r\n    case \"SET_RATES\":\r\n      return {\r\n        ...state,\r\n        rates: action.data,\r\n      };\r\n    case \"SET_TRANSACTIONS\":\r\n      console.log('Data from reducer:',action.data);\r\n      return {\r\n        ...state,\r\n        transactions: action.data,\r\n      };\r\n    case \"CHANGE_TARGET\":\r\n      return {\r\n        ...state,\r\n        targetCurrency: action.data\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.concat(action.data)\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: removeElement(state.transactions, action.data)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction removeElement(arr, timestampToRemove) {\r\n  return arr.filter(el => el !== timestampToRemove);\r\n}\r\n","export const CHANGE_RATE = \"CHANGE_RATE\";\r\nexport const CHANGE_TARGET = \"CHANGE_TARGET\";\r\nexport const ADD_TRANSACTION = \"ADD_TRANSACTION\";\r\nexport const DELETE_TRANSACTION = \"DELETE_TRANSACTION\";\r\nexport const SET_RATES = \"SET_RATES\";\r\nexport const SET_TRANSACTIONS = \"SET_TRANSACTIONS\";","import { toast , } from 'react-toastify';\r\nimport { css } from 'glamor'; \r\n\r\nexport default class Toaster{\r\n  constructor(toastId){\r\n    this.toastId = toastId || 'mainToastId';\r\n    this.timeOut = 2000;\r\n    this.transitionClass = css({\r\n      transform: \"rotateY(360deg)\",\r\n      transition: \"transform 0.6s\"\r\n    }) ;\r\n  }\r\n  info(msg){\r\n    toast(msg, {type: toast.TYPE.INFO, autoClose: this.timeOut, toastId:this.toastId });\r\n  }\r\n  inProgress(msg)  {\r\n    toast(msg || \"Please wait...\", { autoClose: false,type: toast.TYPE.DEFAULT, toastId:this.toastId });\r\n  }\r\n  updateProgress(msg){\r\n    toast.update(this.toastId, {render: msg, autoClose: false,type: toast.TYPE.DEFAULT, className:this.transitionClass  });\r\n  }\r\n  update(msg){\r\n    toast.update(this.toastId, {render: msg, autoClose: this.timeOut,type: toast.TYPE.SUCCESS, className:this.transitionClass  });\r\n  }\r\n  updateError(msg){\r\n    toast.update(this.toastId, {render: msg, autoClose: false,type: toast.TYPE.ERROR, className:this.transitionClass  });\r\n  }\r\n  updateSuccess(msg){\r\n    toast.update(this.toastId, {render: msg, autoClose: this.timeOut,type: toast.TYPE.SUCCESS, className:this.transitionClass  });\r\n  }\r\n\r\n}","import { delay, put, call, apply } from \"redux-saga/effects\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport {SET_RATES} from \"stores/main/actions\";\r\nimport Toaster from 'toaster/toaster';\r\n\r\nexport function* ratesSaga() {\r\n  let toaster = new Toaster('ratesToaster');\r\n  console.log(\"Starting fetching data...\");\r\n    yield toaster.inProgress('Fetching rates...');\r\n  \r\n  const response = yield call(fetch, process.env.REACT_APP_RATES_API);\r\n  const data = yield apply(response, response.json);\r\n    \r\n    yield put({ type: SET_RATES, data: data.rates });\r\n  console.log(\"State changed with newest rates\");  \r\n    yield toaster.updateSuccess('Newest rates fetched');\r\n}\r\n","import { delay, put, call, apply } from \"redux-saga/effects\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport {SET_TRANSACTIONS} from \"stores/main/actions\";\r\nimport Toaster from 'toaster/toaster';\r\n\r\nexport function* transactionsSaga() {\r\n  let toaster = new Toaster('TransactionToaster');\r\n  toaster.inProgress('Fetching transactions...')\r\n  \r\n  const response = yield call(fetch, `${process.env.REACT_APP_MY_WALLET_API}/transactions`);\r\n  \r\n  const data = yield apply(response, response.json);\r\n  \r\n  yield put({ type: SET_TRANSACTIONS, data: data });\r\n  console.log(\"State changed with newest transactions\");\r\n  toaster.updateSuccess('Transaction fetched')\r\n}\r\n","import * as sagas from \"./sagas\";\r\n\r\nconst initSagas = sagaMiddleware => {\r\n  Object.values(sagas).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n};\r\nexport default initSagas;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport mainReducer from \"stores/main/mainReducer\";\r\nimport createSagaMiddleWare from \"redux-saga\";\r\nimport defaultState from \"stores/main/defaultState\";\r\nimport initSagas from \"initSagas\";\r\n\r\nconst getStore = () => {\r\n  const sagaMiddleware = createSagaMiddleWare();\r\n  const middlewares = [sagaMiddleware];\r\n  const composables = [applyMiddleware(...middlewares)];\r\n  const enhancer = compose(...composables);\r\n  const store = createStore(mainReducer, defaultState, enhancer);\r\n  initSagas(sagaMiddleware);\r\n  return store;\r\n};\r\n\r\nexport default getStore();\r\n","import React, { Component } from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nexport default Cmp => {\r\n  return class extends Component {\r\n    render() {\r\n      const { loading, ...passThroughProps } = this.props;\r\n      if (loading) {\r\n        return <LinearProgress />;\r\n      }\r\n      return <Cmp {...passThroughProps} />;\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { connect } from \"react-redux\";\r\nimport withLoading from \"hoc/withLoading\";\r\n\r\nexport function Bar(props) {\r\n  const transactions = props.transactions;\r\n  const ToolBarWithLoading = withLoading(Toolbar)\r\n  return (\r\n    <AppBar>\r\n      <ToolBarWithLoading loading={transactions===null}>{props.children}</ToolBarWithLoading>\r\n    </AppBar>\r\n  );\r\n}\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Bar);","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  chip: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.primary,\r\n    fontWeight: theme.typography.fontWeightBold\r\n  }\r\n}));\r\n","export default function amountPipe(number) {\r\n  return Number(number).toFixed(2);\r\n}\r\n","import React from \"react\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport amountPipe from \"pipes/amountPipe\";\r\n\r\nexport function AccountSummary(props) {\r\n  const internalStyles = styles();\r\n  const sharedStyles = useSharedStyles();\r\n  const isThereAnyTransaction = props.transactions!=undefined && props.transactions.length !== 0;\r\n  const highest = isThereAnyTransaction\r\n    ? getHighestTransaction().amount\r\n    : amountPipe(0);\r\n  const base = props.base;\r\n  const total = isThereAnyTransaction ? calculateTotal() : amountPipe(0);\r\n\r\n  function getHighestTransaction() {\r\n    return props.transactions.reduce((max, transaction) =>\r\n      parseFloat(amountPipe(max.amount)) >\r\n      parseFloat(amountPipe(transaction.amount))\r\n        ? max\r\n        : transaction\r\n    );\r\n  }\r\n  function calculateTotal() {\r\n    return props.transactions.reduce(\r\n      (sum, transaction) => parseFloat(sum) + parseFloat(transaction.amount),\r\n      0\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Box display=\"flex\" alignSelf=\"flex-end\">\r\n        <Chip\r\n          className={[internalStyles.chip, sharedStyles.lightBlue].join(\" \")}\r\n          color=\"secondary\"\r\n          id=\"highest-amount\"\r\n          label={`Highest transaction amount: ${amountPipe(highest)} ${base}`}\r\n        />\r\n        <Chip\r\n          className={[internalStyles.chip, sharedStyles.lightBlue].join(\" \")}\r\n          color=\"secondary\"\r\n          id=\"total-amount\"\r\n          label={`Transactions total amount: ${amountPipe(total)} ${base}`}\r\n        />\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function mapStateToProps(state, props) {\r\n  return {\r\n    transactions: state.transactions,\r\n    base: state.base\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(AccountSummary);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\nexport default makeStyles(theme => ({\r\n  targetCurrency: {\r\n    backgroundColor: blue[100],\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    border: `5px solid ${blue[100]}`,\r\n    borderRadius: theme.spacing(1)\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport amountPipe from \"pipes/amountPipe\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {CHANGE_RATE} from \"stores/main/actions\";\r\n\r\nexport function ConversionInput(props) {\r\n  const currency = props.currency;\r\n  const rate = props.rate;\r\n  const targetCurrency = props.targetCurrency;\r\n  const classes = styles();\r\n\r\n  const handleChange = event => {\r\n    let value = event.target.value > 0.01 ? event.target.value : 0.01;\r\n    let currency = event.target.id;\r\n    props.dispatch({\r\n      type: CHANGE_RATE,\r\n      data: {\r\n        value: value,\r\n        currency: currency\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      id={currency}\r\n      key={currency}\r\n      label={currency}\r\n      value={amountPipe(rate)}\r\n      onChange={e => handleChange(e)}\r\n      type=\"number\"\r\n      className={currency === targetCurrency ? classes.targetCurrency : null}\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"none\"\r\n      variant=\"standard\"\r\n    />\r\n  );\r\n}\r\n\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    rates: state.rates,\r\n    targetCurrency: state.targetCurrency\r\n  };\r\n}\r\n\r\nConversionInput.propTypes = {\r\n  currency: PropTypes.string,\r\n  rate: PropTypes.number,\r\n  targetCurrency: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConversionInput);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport ConversionInput from \"components/ConversionInput/ConversionInput\";\r\nimport propTypes from 'prop-types';\r\nfunction ConversionsGrid(props) {\r\n  const rates = props.rates;\r\n  const conversions = Object.keys(rates);\r\n  const sharedStyles = useSharedStyles();\r\n  function renderPanel(conversion, index) {\r\n    return (\r\n      <Grid item key={`${conversion}-container-${index}`} xs={2} md={6} lg={4}>\r\n        <ConversionInput\r\n          currency={conversion}\r\n          rate={Number(rates[conversion])}\r\n        ></ConversionInput>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Paper className={sharedStyles.paper}>\r\n      <Grid container spacing={2}>\r\n        {conversions.map((conversion, i) => renderPanel(conversion, i))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    rates: state.rates\r\n  };\r\n}\r\nConversionsGrid.propTypes = {\r\n  rates:propTypes.object,\r\n}\r\nexport default connect(mapStateToProps)(ConversionsGrid);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  formControl: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport styles from \"./styles\";\r\nimport {CHANGE_TARGET} from \"stores/main/actions\";\r\nexport function CurrencySelect(props) {\r\n  const classes = styles();\r\n  const sharedStyles = useSharedStyles();\r\n\r\n  const targetCurrency = props.targetCurrency;\r\n  const rates = props.rates;\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  \r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    props.dispatch({\r\n      type: CHANGE_TARGET,\r\n      data: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={sharedStyles.paper}>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor=\"target-currency-dropdown\">\r\n          Target Currency\r\n        </InputLabel>\r\n        <Select\r\n          id=\"currency-select\"\r\n          native\r\n          fullWidth\r\n          value={targetCurrency}\r\n          onChange={e => handleChange(e)}\r\n          labelWidth={labelWidth}\r\n          inputProps={{\r\n            name: \"Target-Currency\",\r\n            id: \"target-currency-dropdown\"\r\n          }}\r\n        >\r\n          {Object.keys(rates).map((rate, i) => (\r\n            <option key={i} value={rate}>\r\n              {rate}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Paper>\r\n  );\r\n}\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    rates: state.rates,\r\n    targetCurrency: state.targetCurrency\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CurrencySelect);\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ConversionsGrid from \"components/ConversionsGrid/ConversionsGrid\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport withLoading from \"hoc/withLoading\";\r\nimport CurrencySelect from \"components/CurrencySelect/CurrencySelect\";\r\nimport { connect } from \"react-redux\";\r\nexport function Conversions(props) {\r\n  const sharedStyles = useSharedStyles();\r\n  const rates = props.rates;\r\n  const CurrencySelectWithLoading = withLoading(CurrencySelect);\r\n  const ConversionGridWithLoading = withLoading(ConversionsGrid);\r\n  return (\r\n    <Paper className={[sharedStyles.paper, sharedStyles.lightBlue].join(\" \")}>\r\n      <h2>Conversions</h2>\r\n      <CurrencySelectWithLoading loading={rates===null}/>\r\n      <Grid container display=\"flex\" flex-direction=\"row \">\r\n        <ConversionGridWithLoading loading={rates===null}/>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    rates: state.rates,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Conversions);\r\n","import React from \"react\";\r\nimport MaterialUIForm from \"react-material-ui-form\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport amountPipe from \"pipes/amountPipe\";\r\nimport {ADD_TRANSACTION} from \"stores/main/actions\";\r\nimport propTypes from 'prop-types';\r\n\r\nexport function TransactionForm(props) {\r\n  const sharedStyles = useSharedStyles();\r\n  const [amount, setAmount] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const titleMaxLength = 50;\r\n\r\n  function handleFormSubmission() {\r\n    if (isTitleValid(title) && isAmountValid(amount)) {\r\n      setAmount(amount);\r\n      setTitle(title);\r\n      \r\n      props.dispatch({\r\n        type: ADD_TRANSACTION,\r\n        data: {\r\n          amount: parseFloat(amountPipe(amount)),\r\n          title: title,\r\n          timestamp: moment(moment.now()).clone(),\r\n          base: \"EUR\",\r\n          person: \"Some special guy who uses this app\"\r\n        }\r\n      });\r\n      setAmount(\"\");\r\n      setTitle(\"\");\r\n    }\r\n  }\r\n  const isNullOrWhitespace = string =>\r\n    string === null || string.trim().length === 0;\r\n  \r\n    const isAmountValid = amount =>\r\n    amount !== null && !isNaN(amount) && amount !== 0.0;\r\n  \r\n    const isTitleValid = title => title !== null && title.length < titleMaxLength;\r\n\r\n  return (\r\n        <MaterialUIForm onSubmit={handleFormSubmission}>\r\n          <Grid container alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                required\r\n                id=\"transaction-form-amount\"\r\n                label=\"EUR\"\r\n                value={amount}\r\n                onChange={e => {\r\n                  !isNullOrWhitespace(e.target.value)\r\n                    ? setAmount(e.target.value)\r\n                    : setAmount(\"\");\r\n                }}\r\n                className={sharedStyles.fullWidth}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                error={!isAmountValid(amount)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <TextField\r\n                required\r\n                id=\"transaction-form-title\"\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={e => {\r\n                  !isNullOrWhitespace(e.target.value)\r\n                    ? setTitle(e.target.value)\r\n                    : setTitle(\"\");\r\n                }}\r\n                className={sharedStyles.fullWidth}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                error={!isTitleValid(title)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Button\r\n                type=\"submit\"\r\n                className={sharedStyles.fullWidth}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Add transaction\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </MaterialUIForm>\r\n  );\r\n}\r\n\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions\r\n  };\r\n}\r\n\r\nTransactionForm.propTypes = {\r\n  transactions:propTypes.array\r\n}\r\n\r\nexport default connect(mapStateToProps)(TransactionForm);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n\r\nexport default makeStyles(theme => ({\r\n    amountPlus: {\r\n        color: green[500]\r\n      },\r\n      amountMinus: {\r\n        color: red[500]\r\n      }\r\n}));\r\n","import React from \"react\";\r\nimport amountPipe from \"pipes/amountPipe\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport styles from './styles';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TransactionAmount(props) {\r\n  const currency = props.currency;\r\n  const amount = props.amount;\r\n  const sharedStyles = useSharedStyles();\r\n  const internalStyles = styles();\r\n  const assignColor = amount => {\r\n    return amount > 0 ? internalStyles.amountPlus : internalStyles.amountMinus;\r\n  };\r\n\r\n  return (\r\n    <div className={[sharedStyles.textBold, assignColor(amount)].join(\" \")}>\r\n      {amountPipe(amount)} {currency}\r\n    </div>\r\n  );\r\n}\r\nTransactionAmount.propTypes={\r\n  amount:PropTypes.number,\r\n  currency:PropTypes.string,\r\n}","import React from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TransactionAmount from \"components/TransactionAmount/TransactionAmount\";\r\nimport {DELETE_TRANSACTION } from \"stores/main/actions\";\r\nimport propTypes from 'prop-types';\r\n\r\nexport function TransactionPanel(props) {\r\n  const sharedStyles = useSharedStyles();\r\n  const transaction = props.transaction;\r\n  const index = props.index;\r\n  const targetCurrency = props.targetCurrency;\r\n  const targetRate = props.rates[targetCurrency];\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  \r\n  const isAmountPositive = amount => amount > 0;\r\n  \r\n  const assignFromToLabel = amount => {\r\n    return isAmountPositive(amount) ? \"Received from\" : \"Sent to\";\r\n  };\r\n\r\n  function onDelete(transaction) {\r\n    props.dispatch({\r\n      type: DELETE_TRANSACTION,\r\n      data: transaction\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={expanded}\r\n      onChange={() => setExpanded(!expanded)}\r\n      key={`transaction-${transaction.timestamp}`}\r\n    >\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls={`panel-content-` + index}\r\n        id={\"panel-header-\" + index}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={2}>\r\n            <TransactionAmount\r\n              amount={transaction.amount}\r\n              currency={transaction.base}\r\n            ></TransactionAmount>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TransactionAmount\r\n              amount={targetRate * transaction.amount}\r\n              currency={targetCurrency}\r\n            ></TransactionAmount>\r\n          </Grid>\r\n          <Grid item xs={8} className={sharedStyles.textBold}>\r\n            {transaction.title}\r\n          </Grid>\r\n        </Grid>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <Grid container display=\"flex\" alignContent=\"center\" spacing={1}>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              id={\"timestamp-\" + index}\r\n              label=\"Timestamp\"\r\n              value={moment(transaction.timestamp).format(\"llll\")}\r\n              className={sharedStyles.fullWidth}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              id={\"person-\" + index}\r\n              label={assignFromToLabel(transaction.amount)}\r\n              value={transaction.person}\r\n              className={sharedStyles.fullWidth}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justify=\"flex-end\"\r\n            xs={2}\r\n          >\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => onDelete(transaction)}\r\n            >\r\n              DELETE\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    targetCurrency: state.targetCurrency,\r\n    rates: state.rates,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(TransactionPanel);\r\n\r\nTransactionPanel.propTypes = {\r\n  index: propTypes.number,\r\n  transaction: propTypes.object,\r\n  targetCurrency: propTypes.string,\r\n  rates: propTypes.object,\r\n}","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TableHeader(props) {\r\n  const align = props.align || \"left\";\r\n  const sharedStyles = useSharedStyles();\r\n  return (\r\n    <Typography\r\n      align={align}\r\n      className={[sharedStyles.textSecondary, sharedStyles.textBold].join(\" \")}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTableHeader.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TableHeader from \"components/TableHeader/TableHeader\";\r\nimport propTypes from 'prop-types';\r\n\r\nexport default function TransactionListHeader(props) {\r\n  const base = props.base;\r\n  const targetCurrency = props.targetCurrency;\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={2}>\r\n        <TableHeader>{`Amount [${base}]`}</TableHeader>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <TableHeader>{`Amount [${targetCurrency}]`}</TableHeader>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TableHeader>Title</TableHeader>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <TableHeader align=\"right\">Details</TableHeader>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nTransactionListHeader.propTypes = {\r\n  base:propTypes.string,\r\n  targetCurrency:propTypes.string,\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TransactionPanel from \"components/TransactionPanel/TransactionPanel\";\r\nimport TransactionListHeader from \"components/TransactionListHeader/TransactionListHeader\";\r\nimport propTypes from 'prop-types';\r\n\r\nexport function TransactionsList(props) {\r\n  const transactions = props.transactions;\r\n  const sharedStyles = useSharedStyles();\r\n  const base = props.base;\r\n  const targetCurrency = props.targetCurrency;\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper\r\n        className={[\r\n          sharedStyles.paper,\r\n          sharedStyles.textSecondary,\r\n          sharedStyles.textBold\r\n        ].join(\" \")}\r\n      >\r\n        <TransactionListHeader\r\n          base={base}\r\n          targetCurrency={targetCurrency}\r\n        ></TransactionListHeader>\r\n      </Paper>\r\n      {transactions.map((transaction, i) => {\r\n        return (\r\n          <TransactionPanel\r\n            transaction={transaction}\r\n            key={transaction.timestamp}\r\n            index={i}\r\n          ></TransactionPanel>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n    targetCurrency: state.targetCurrency,\r\n    rates: state.rates,\r\n    base: state.base\r\n  };\r\n}\r\nTransactionsList.propTypes = {\r\n  transactions:propTypes.array,\r\n  base:propTypes.string,\r\n  rates:propTypes.object,\r\n  targetCurrency:propTypes.string,  \r\n}\r\n\r\nexport default connect(mapStateToProps)(TransactionsList);\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TransactionForm from \"components/TransactionForm/TransactionForm\";\r\nimport useSharedStyles from \"styles/sharedStyles\";\r\nimport withLoading from \"hoc/withLoading\";\r\nimport TransactionsList from \"components/TransactionsList/TransactionsList\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport propTypes from 'prop-types';\r\n\r\nexport function Transactions(props) {\r\n  const loading = props.loading;\r\n  const transactions = props.transactions;\r\n  const sharedStyles = useSharedStyles();\r\n\r\n  const TransactionListWithLoading = withLoading(TransactionsList);\r\n  return (\r\n    <Paper className={[sharedStyles.paper, sharedStyles.lightBlue].join(\" \")}>\r\n      <h2>Transactions</h2>\r\n      <h3>Create new</h3>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className={[sharedStyles.paper, sharedStyles.form].join(\" \")}>\r\n          <TransactionForm></TransactionForm>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <h3>History</h3>\r\n      <TransactionListWithLoading loading={transactions===null || transactions == undefined} />\r\n    </Paper>\r\n  );\r\n}\r\nexport function mapStateToProps(state) {\r\n  return {\r\n    loading: state.loading,\r\n    transactions:state.transactions\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Transactions);\r\n\r\nTransactions.propTypes = {\r\n  loading: propTypes.bool,\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useSharedStyles from \"../styles/sharedStyles\";\r\nimport store from \"stores/main/store\";\r\nimport Bar from \"../components/Bar/Bar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Provider } from \"react-redux\";\r\nimport AccountSummary from \"../components/AccountSummary/AccountSummary\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Conversions from \"components/Conversions/Conversions\";\r\nimport Transactions from \"components/Transactions/Transactions\";\r\nexport default function CenteredGrid() {\r\n  const sharedStyles = useSharedStyles();\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Bar>\r\n        <Box\r\n          className={sharedStyles.fullWidth}\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography variant=\"h1\" className={sharedStyles.appTitle}>\r\n            My wallet\r\n          </Typography>\r\n          <AccountSummary></AccountSummary>\r\n        </Box>\r\n      </Bar>\r\n      <Box p={2} my={5} py={5}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={9}>\r\n            <Transactions></Transactions>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Conversions></Conversions>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Provider>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport AdminView from \"./views/AdminView\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst theme = createMuiTheme({});\n\nfunction App() {\n  console.log('rates api:',process.env.REACT_APP_RATES_API);\n  return (\n    <React.Fragment>\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AdminView></AdminView>\n      </div>\n    </MuiThemeProvider>\n    <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}